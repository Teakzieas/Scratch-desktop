{
  "name": "scratch-desktop",
  "productName": "Scratch",
  "description": "Scratch 3.0 as a self-contained desktop application",
  "author": "Scratch Foundation",
  "version": "3.30.9-Cytron-Pi4-32",
  "license": "BSD-3-Clause",
  "scripts": {
    "Piconfig": "sudo raspi-config nonint do_i2c 0 && sudo dphys-swapfile swapoff && sudo sed -i 's/^CONF_SWAPSIZE=.*/CONF_SWAPSIZE=2048/' /etc/dphys-swapfile  &&sudo dphys-swapfile setup && sudo dphys-swapfile swapon && sudo apt install -y default-jdk && sudo apt-get install -y ruby-full && sudo gem install fpm && sudo apt install -y g++-arm-linux-gnueabihf",
    "Stemhat:save": "mkdir -p CytronStemhat/vm/extension-support  CytronStemhat/vm/extensions  CytronStemhat/gui/extensions && cp -r node_modules/scratch-vm/src/extensions/scratch3_pistemhat CytronStemhat/vm/extensions/ && cp node_modules/scratch-vm/src/extension-support/extension-manager.js CytronStemhat/vm/extension-support/ && cp -r node_modules/scratch-gui/src/lib/libraries/extensions/pistemhat CytronStemhat/gui/extensions/&& cp node_modules/scratch-gui/src/lib/libraries/extensions/index.jsx CytronStemhat/gui/extensions/",
    "Stemhat:load": "cp -r CytronStemhat/vm/extensions/scratch3_pistemhat node_modules/scratch-vm/src/extensions/ && cp CytronStemhat/vm/extension-support/extension-manager.js node_modules/scratch-vm/src/extension-support/ && cp -r CytronStemhat/gui/extensions/pistemhat node_modules/scratch-gui/src/lib/libraries/extensions/ && cp CytronStemhat/gui/extensions/index.jsx node_modules/scratch-gui/src/lib/libraries/extensions/",
    "clean": "rimraf ./dist ./static/assets",
    "start": "npm run Stemhat:load && npm run compile:cpp64 && npm run compile:stemhatCpp64 && npm run compile:stemhatI2c64 && mkdirp ./dist && electron-webpack dev --bail --display-error-details --env.minify=false --no-progress",
    "compile": "mkdirp ./dist && electron-webpack --bail --display-error-details --env.minify=false --no-progress && cp patches/*.bmp ./static/",
    "compile:cpp32": "CXX=arm-linux-gnueabihf-g++ CC=arm-linux-gnueabihf-gcc node ./node_modules/node-gyp/bin/node-gyp.js configure build -C ./cpp && cp ./cpp/build/Release/gpiolib.node ./static/",
    "compile:cpp64": "CXX=g++ CC=gcc node ./node_modules/node-gyp/bin/node-gyp.js configure build -C ./cpp && cp ./cpp/build/Release/gpiolib.node ./static/",
    "compile:stemhatCpp64": "CXX=g++ CC=gcc node ./node_modules/node-gyp/bin/node-gyp.js configure build -C ./CytronStemhatCpp && cp ./CytronStemhatCpp/build/Release/stemhat.node ./static/",
    "compile:stemhatCpp32": "CXX=arm-linux-gnueabihf-g++ CC=arm-linux-gnueabihf-gcc node ./node_modules/node-gyp/bin/node-gyp.js configure build -C ./CytronStemhatCpp && cp ./CytronStemhatCpp/build/Release/stemhat.node ./static/",
    "compile:stemhatI2c64": "cd CytronStemhatI2c && npm install && cd .. && CXX=g++ CC=gcc node ./node_modules/node-gyp/bin/node-gyp.js configure build -C ./CytronStemhatI2c && npx electron-rebuild -f -w --module-dir ./CytronStemhatI2c && cp ./CytronStemhatI2c/build/Release/i2c.node ./static/",
    "compile:stemhatI2c32": "cd CytronStemhatI2c && npm install && cd .. && CXX=arm-linux-gnueabihf-g++ CC=arm-linux-gnueabihf-gcc node ./node_modules/node-gyp/bin/node-gyp.js configure build -C ./CytronStemhatI2c && CC=arm-linux-gnueabihf-gcc CXX=arm-linux-gnueabihf-g++ npx electron-rebuild -f -w --module-dir ./CytronStemhatI2c --arch=arm && cp ./CytronStemhatI2c/build/Release/i2c.node ./static/",
    "fetch": "rimraf ./static/assets/ && mkdirp ./static/assets/ && node ./scripts/fetchMediaLibraryAssets.js",
    "build": "npm run build:dev",
    "build:dev": "npm run compile && npm run doBuild -- --mode=dev",
    "build:dir": "npm run compile && npm run doBuild -- --mode=dir",
    "build:dist": "npm run compile && npm run doBuild -- --mode=dist",
    "doBuild": "node ./scripts/electron-builder-wrapper.js",
    "updateVersion32": "node -e \"let fs = require('fs'); let pkg = require('./package.json'); pkg.version = pkg.version.replace(/-32$/, '').replace(/-64$/, '') + '-32'; fs.writeFileSync('package.json', JSON.stringify(pkg, null, 2));\"",
    "updateVersion64": "node -e \"let fs = require('fs'); let pkg = require('./package.json'); pkg.version = pkg.version.replace(/-32$/, '').replace(/-64$/, '') + '-64'; fs.writeFileSync('package.json', JSON.stringify(pkg, null, 2));\"",
    "dist:rpi32": "npm run updateVersion32 && npm run Stemhat:load && npm run clean && npm run compile && npm run compile:cpp32 && npm run compile:stemhatCpp32 && npm run compile:stemhatI2c32 && npm run fetch && npm run doBuild -- --mode=dist --platform=linux32",
    "dist:rpi64": "npm run updateVersion64 && npm run Stemhat:load && npm run clean && npm run compile && npm run compile:cpp64 && npm run compile:stemhatCpp64 && npm run compile:stemhatI2c64 && npm run fetch && npm run doBuild -- --mode=dist --platform=linux64",
    "test": "npm run test:lint",
    "test:lint": "eslint --cache --color --ext .jsx,.js .",
    "postinstall": "git apply patches/*.patch && cd node_modules/scratch-blocks/ && npm i --ignore-scripts && npm exec -c \"python build.py\" && cd ../.. && npm run Stemhat:load"
  },
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/LLK/scratch-desktop.git"
  },
  "dependencies": {
    "source-map-support": "^0.5.19"
  },
  "devDependencies": {
    "@babel/core": "^7.9.6",
    "electron-rebuild": "^3.2.9",
    "@babel/plugin-proposal-object-rest-spread": "^7.9.6",
    "@babel/plugin-syntax-dynamic-import": "^7.8.3",
    "@babel/plugin-transform-async-to-generator": "^7.8.3",
    "@babel/plugin-transform-nullish-coalescing-operator": "^7.22.5",
    "@babel/plugin-transform-optional-chaining": "^7.22.6",
    "@babel/preset-env": "^7.9.6",
    "@babel/preset-react": "^7.9.4",
    "async": "^3.2.0",
    "autoprefixer": "9.8.8",
    "babel-eslint": "^10.1.0",
    "babel-loader": "^8.1.0",
    "babel-plugin-react-intl": "^7.5.7",
    "copy-webpack-plugin": "^5.1.1",
    "electron": "^23.3.12",
    "electron-builder": "^23.6.0",
    "electron-devtools-installer": "^3.2.0",
    "electron-installer-debian": "^3.2.0",
    "electron-notarize": "^1.1.1",
    "electron-store": "^8.0.1",
    "electron-webpack": "^2.8.2",
    "eslint": "^7.0.0",
    "eslint-config-scratch": "^6.0.0",
    "eslint-plugin-import": "2.27.5",
    "eslint-plugin-react": "^7.20.0",
    "fs-extra": "^9.0.1",
    "intl": "1.2.5",
    "lodash.bindall": "^4.4.0",
    "lodash.defaultsdeep": "^4.6.1",
    "minilog": "^3.1.0",
    "minimist": "^1.2.5",
    "mkdirp": "^1.0.4",
    "nets": "^3.2.0",
    "node-gyp": "^10.0.1",
    "postcss-import": "12.0.1",
    "postcss-simple-vars": "5.0.2",
    "react": "16.14.0",
    "react-dom": "16.14.0",
    "react-intl": "2.9.0",
    "react-redux": "5.1.2",
    "redux": "3.7.2",
    "rimraf": "^3.0.2",
    "scratch-blocks": "^1.1.36",
    "scratch-gui": "github:scratchfoundation/scratch-gui#scratch-desktop-v3.30.1",
    "uuid": "^8.0.0",
    "webpack": "^4.43.0",
    "webpack-merge": "4.2.2"
  },
  "resolutions": {
    "upath": "^1.0.5"
  }
}
